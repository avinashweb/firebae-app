{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/customer-list/customer-list.component.css","webpack:///./src/app/customer-list/customer-list.component.html","webpack:///./src/app/customer-list/customer-list.component.ts","webpack:///./src/app/customer/customer.component.css","webpack:///./src/app/customer/customer.component.html","webpack:///./src/app/customer/customer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/shared/customer.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-customer></app-customer>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'crud-firebase';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { CustomerService } from './shared/customer.service';\nimport { HeaderComponent } from './header/header.component';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomerComponent,\n    CustomerListComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireDatabaseModule\n  ],\n  providers: [\n    CustomerService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<table class=\\\"table table-bordered table-sm\\\">\\n  <thead>\\n    <tr>\\n      <th>Name</th>\\n      <th>Email</th>\\n      <th>Mobile</th>\\n      <th>Location</th>\\n      <th>Update</th>\\n      <th>Delete</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <ng-container *ngFor=\\\"let customer of customArray\\\">\\n        <tr>\\n          <td>{{ customer.fullname }}</td>\\n          <td>{{ customer.email }}</td>\\n          <td>{{ customer.mobile }}</td>\\n          <td>{{ customer.location }}</td>\\n          <td>\\n            <button class=\\\"btn btn-sm btn-warning\\\" (click)=\\\"customerService.populateForm(customer)\\\">Update</button>\\n          </td>\\n          <td>\\n            <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"onDelete(customer.key)\\\">Delete</button>\\n          </td>\\n        </tr>\\n    </ng-container>\\n  </tbody>\\n</table>\\n<div class=\\\"alert alert-danger\\\" *ngIf=\\\"delete_msg\\\">\\n  Delete Succesfully !\\n</div>\\n\"","import { CustomerService } from './../shared/customer.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.css']\n})\nexport class CustomerListComponent implements OnInit {\n\n  constructor(private customerService: CustomerService) { }\n  delete_msg: boolean;\n  customArray = [];\n  ngOnInit() {\n    this.customerService.getCustomers().subscribe(\n      list => {\n        this.customArray = list.map(item => {\n          return {\n            key: item.key, ...item.payload.val()\n          }\n        });\n      });\n  }\n\n  onDelete($key){\n    if(confirm(\"Are sure do you want to delete?\")){\n      this.customerService.deleteCutomer($key);\n      this.delete_msg = true;\n      setTimeout(() => this.delete_msg = false, 3000);\n    }\n  }\n  \n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-5\\\">\\n      <form [formGroup]=\\\"this.customerService.form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <input type=\\\"hidden\\\" formControlName=\\\"$key\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"\\\">Full Name</label>\\n          <input class=\\\"form-control\\\" \\n          formControlName=\\\"fullname\\\" \\n          [ngClass]=\\\"{ 'is-invalid' : submitted && formcontrol.fullname.errors}\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formcontrol.fullname.errors\\\">\\n            Name is required.\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"\\\">Email</label>\\n          <input type=\\\"text\\\" name=\\\"email\\\" id=\\\"\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid' : submitted && formcontrol.email.errors}\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formcontrol.email.errors\\\">\\n            Email is required.\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"\\\">Mobile</label>\\n          <input type=\\\"text\\\" name=\\\"mobile\\\" id=\\\"\\\" class=\\\"form-control\\\" formControlName=\\\"mobile\\\" [ngClass]=\\\"{ 'is-invalid' : submitted && formcontrol.mobile.errors}\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formcontrol.mobile.errors\\\">\\n            Mobile is required.\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"\\\">Location</label>\\n          <input type=\\\"text\\\" name=\\\"location\\\" id=\\\"\\\" class=\\\"form-control\\\" formControlName=\\\"location\\\" [ngClass]=\\\"{ 'is-invalid' : submitted && formcontrol.location.errors}\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formcontrol.location.errors\\\">\\n            Location is required.\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary\\\">\\n        </div>\\n      </form>\\n      <div class=\\\"alert alert-info\\\" *ngIf=\\\"success_msg\\\">\\n        Form Submitted Successfully :)\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-7\\\">\\n      <app-customer-list></app-customer-list>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../shared/customer.service';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n  submitted: boolean;\n  success_msg: boolean;\n  formcontrol = this.customerService.form.controls; \n  constructor(private customerService: CustomerService) { }\n\n  onSubmit() {\n    this.submitted = true;\n    if(this.customerService.form.valid){\n      if(this.customerService.form.get('$key').value == null ) {\n        this.customerService.insertCustomer(this.customerService.form.value);\n        this.success_msg = true;\n        setTimeout(() => this.success_msg = false, 3000);\n        this.customerService.form.reset();\n      }\n      else {\n        this.customerService.updateCustomer(this.customerService.form.value);\n        this.success_msg = true;\n        setTimeout(() => this.success_msg = false, 3000);\n        this.customerService.form.reset();\n      }\n      this.submitted = false;\n    }\n    \n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"dkjfgdfjhj\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\nimport { Injectable } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  constructor(private firebase: AngularFireDatabase) { }\n  customerList: AngularFireList<any>;\n\n  form = new FormGroup ({\n    $key: new FormControl(null),\n    fullname: new FormControl('', Validators.required),\n    email: new FormControl('', Validators.email),\n    mobile: new FormControl('', Validators.required),\n    location: new FormControl('', Validators.required),\n  });\n\n  getCustomers(){\n    this.customerList = this.firebase.list('customers');\n    return this.customerList.snapshotChanges();\n  }\n\n  insertCustomer(customer){\n    this.customerList.push({\n      fullname: customer.fullname,\n      email: customer.email,\n      mobile: customer.mobile,\n      location: customer.location\n    })\n  }\n\n  populateForm(customer) {\n    console.log(customer);\n    this.form.controls[\"$key\"].setValue(customer.key);\n    this.form.controls['fullname'].setValue(customer.fullname);\n    this.form.controls['email'].setValue(customer.email);\n    this.form.controls['mobile'].setValue(customer.mobile);\n    this.form.controls['location'].setValue(customer.location);\n  }\n\n  updateCustomer(customer) {\n    this.customerList.update(customer.$key, {\n      fullname: customer.fullname,\n      email: customer.email,\n      mobile: customer.mobile,\n      location: customer.location\n    });\n  }\n\n  deleteCutomer($key: string){\n    this.customerList.remove($key);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyC27VCbch111YRACkUY3wN22qE0_Db8MHQ\",\n    authDomain: \"my-project-19fab.firebaseapp.com\",\n    databaseURL: \"https://my-project-19fab.firebaseio.com\",\n    projectId: \"my-project-19fab\",\n    storageBucket: \"my-project-19fab.appspot.com\",\n    messagingSenderId: \"163713554587\"\n  }\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}